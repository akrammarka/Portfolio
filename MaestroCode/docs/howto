HOWTO
Author: Omar Metwally (omar@analog.earth)
11/14/2019

The purpose of this document is to outline the process of reploying an Ethereum contract to a private network.


*Initialize private chain*
./geth --datadir=/Users/bkpf/Desktop/maestro/data init /Users/bkpf/Desktop/maestro/contracts/genesis.json

* Run private chain *
./geth --datadir=/Users/bkpf/Desktop/maestro/data console

Private network Maestro.sol address:
0x9c3027ac8bf6fd7c4f13e7766c08d538fb1d8188

import json
from web3 import Web3, IPCProvider

ipc_path = '/Users/bkpf/Desktop/maestro/data/geth.ipc'
w3 = Web3(IPCProvider(ipc_path))
w3.eth.blockNumber

abi = ''
abi_path = '/Users/bkpf/Desktop/maestro/source/maestro.abi'
with open(abi_path,'r') as myfile:
    abi+=myfile.read()

abi = json.loads(abi)

bin = ''
bin_path = '/Users/bkpf/Desktop/maestro/source/maestro.bin'
with open(bin_path,'r') as myfile:
    bin+=myfile.read()

newContract = w3.eth.contract(abi=abi,bytecode=bin)

transaction_hash = newContract.constructor(1000,"maestro coin","mc").transact({'from':w3.eth.accounts[0],'gas':8000000})

contract_address = w3.eth.getTransactionReceipt(transaction_hash).contractAddress

myContract = w3.eth.contract(address=contract_address,abi=abi)

# next line still producing BadFunctionCallOutput error with null return despite recompiling via remix and using new abi & bytecode

myContract.functions.greet_omar(0).call()


